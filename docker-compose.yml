version: "3.9"

volumes:
  data: {}
  mono-node-modules: {}

services:
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=development
      - POSTGRES_USER=rails
      - POSTGRES_PASSWORD=rails
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ../data:/var/lib/postgresql/data

  rails:
    build:
      context: "./api"
    command: >
      /bin/sh -c " \
        while ! nc -z postgres 5432; \
        do \
          echo waiting for postgres; \
          sleep 1; \
        done; \
        echo postgres READY; \

        cd api; \
        rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'
      "
    volumes:
      - .:/myapp
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - RAILS_ENV=development
    stdin_open: true
    tty: true
    networks:
      default:
        aliases:
          - api.counsel.com

  nx:
    restart: always
    build:
      context: ./web
    environment:
      - DEV_PLATFORM=DOCKER
    command: sh
    volumes:
      - ./:/app
      - mono-node-modules:/app/node_modules
    stdin_open: true
    tty: true

  storybook:
    build:
      context: ./web
    environment:
      - DEV_PLATFORM=DOCKER
    command: >
      /bin/sh -c " \
        cd web; \
        npx nx run storybook-host:build-storybook; \
        npx nx run storybook-host:storybook --host=0.0.0.0
      "
    volumes:
      - ./:/app
      - mono-node-modules:/app/node_modules
    ports:
      - "4400:4400"
    stdin_open: true
    tty: true
    networks:
      default:
        aliases:
          - storybook.counsel.com